// Use Bun to run this!
/// <reference types="bun-types" />

interface IArgs {
  package: string;
  path: string;
  project: string;
  short: string;
}

const jobTemplate = (args: IArgs) =>
  `  deploy_${args.short}:
    name: ${args.package}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      deployments: write

    env:
      TURBO_TOKEN: \${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: leomotors

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node with cache
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: pnpm

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm turbo run --filter="${args.package}" build

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: \${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: \${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: \${{ secrets.GITHUB_TOKEN }}
          projectName: ${args.project}
          directory: ${args.path}/build`;

const template = (projects: IArgs[]) =>
  `# THIS FILE IS GENERATED by scripts/generate-actions.ts

name: Deploy Website

on:
  push:
    branches:
      - main

jobs:
${projects.map(jobTemplate).join("\n\n")}
`;

const projects = [
  {
    package: "resume.leomotors.me",
    path: "apps/resume",
    project: "resume-leomotors",
    short: "resume",
  },
  {
    package: "leomotors.me",
    path: "apps/www",
    project: "www-leomotors",
    short: "www",
  },
] satisfies IArgs[];

Bun.write(`.github/workflows/pages.yml`, template(projects));
